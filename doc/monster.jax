*monster.txt*	 rcodetools/solargraph を利用した Ruby のコード補完を行う


==============================================================================
概要						*monster-introduction*

*monster* は rcodetools 又は solargraph を利用した Ruby のコード補完を行うプラ
グインです。

- Requires
 - gem
   $ gem install rcodetools
   $ gem install solargraph
 - plugin
    vimproc.vim  - https://github.com/Shougo/vimproc.vim
    NOTE: 非同期で補完を行う場合にのみ必要



==============================================================================
使い方						*monster-usage*

<C-x><C-o> でコード補完を開始します。
また、|neocomplete.vim| を利用して自動補完を行う場合は
>
	let g:neocomplete#sources#omni#input_patterns = {
	\   "ruby" : '[^. *\t]\.\w*\|\h\w*::',
	\}
<
と、設定します。rcodecools の代わりに solargraph を使う場合は
>
	let g:monster#completion#backend = 'solargraph'
<
と、設定します。
また、非同期でコード補完を行ないたい場合は、以下のように設定を行う必要がありま
す。
>
    " Set async completion.
    let g:monster#completion#rcodetools#backend = "async_rct_complete"
    " Or let g:monster#completion#solargraph#backend = "async_solargraph_suggest"

    " Use neocomplete.vim
    let g:neocomplete#sources#omni#input_patterns = {
    \	'ruby' : '[^. *\t]\.\|\h\w*::',
    \}
<

非同期でコード補完を行うときの流れは以下のようになります。

1．|g:neocomplete#sources#omni#input_patterns| にマッチしたパターンを入力すると
   補完開始
2．非同期で処理が行われるので補完中は処理がブロックされずに続けて入力する事
   ができる
3．入力中、もしくは |CursorHoldI| 時に補完処理が終了していれば補完結果が出力さ
   れる

この時に |CursorHoldI| が 'updatetime' に依存していることに注意してください。


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
